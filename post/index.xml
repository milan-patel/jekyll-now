<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Milan&#39;s Blog</title>
    <link>/post/</link>
    <description>Recent content in Posts on Milan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Animated Charts in R</title>
      <link>/2020/06/03/animated-charts-in-r/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/03/animated-charts-in-r/</guid>
      <description>I came across a github repository here with a code snippet, explaining how to make an animated chart in R. I’ve implemented it here.
library(tidyverse) library(nbastatR) library(gganimate) library(scales) m &amp;lt;- metrics_leaders(seasons = 2010:2019, metric = &amp;quot;fg3m&amp;quot;, season_types = &amp;quot;Regular Season&amp;quot;, modes = c(&amp;quot;Totals&amp;quot;), return_message = TRUE, nest_data = FALSE) %&amp;gt;% select(slugSeason, namePlayer, fg3m, numberRank) %&amp;gt;% mutate(Value_lbl = paste0(fg3m)) %&amp;gt;% group_by(slugSeason) %&amp;gt;% filter(numberRank &amp;lt;= 10) %&amp;gt;% ungroup() anim &amp;lt;- ggplot(m, aes(numberRank, group = namePlayer, fill=as.</description>
    </item>
    
    <item>
      <title>NBA Matchup Plots</title>
      <link>/2020/02/22/nba-matchup-plots/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/02/22/nba-matchup-plots/</guid>
      <description>Sometime in October last year, the NBA added matchup data to their stats page, prompting Seth Partnow to tweet out this plot. With some “quick and dirty” python code, Daryl Blackport of pbpstats.com recreated this plot.
Oh Hello: https://t.co/bn7zTT89y7 pic.twitter.com/bSl9G5OCGC
&amp;mdash; Anchorage Man (@SethPartnow) October 25, 2019  So, here I am, recreating this plot once again in R, and sharing the code here. It’s like a weird game of telephone, but with NBA matchup plots.</description>
    </item>
    
    <item>
      <title>ELO Ratings in the NBA</title>
      <link>/2020/01/15/elo-ratings-in-the-nba/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/15/elo-ratings-in-the-nba/</guid>
      <description>In this post, I’ve implemented an ELO system for all 30 teams in the NBA, similar to the one available at FiveThirtyEight.com.
First, the ELO rating system is a simple way of ranking a pool of players that face each other in a series of head-to-head matches. After each match, the winner’s rating increases and the loser’s rating decreases, both by the same amount.
The update formula follows this basic structure, \(R_{new} = R_{prev}+k(S-p)\) , where \(k\) is the update factor and \(S\) is the result of the match (1 if won, 0 if lost, 0.</description>
    </item>
    
    <item>
      <title>Analyzing Clutchness in the NBA</title>
      <link>/2020/01/02/analyzing-clutchness-in-the-nba/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/02/analyzing-clutchness-in-the-nba/</guid>
      <description>The following is an adapted version of a final project submitted for my classification course
Typically, an NBA team will attempt shots that maximizes their expected points per shot. For example, consider how a three-point shot with a 0.35 probability of scoring has a higher expected points per shot (\(E(S_{3ptr})= 3 \cdot 35\% = 1.05\)) than a two-point shot with a 0.45 probability of scoring (\(E(S_{2ptr})= 2 \cdot 45\% = 0.</description>
    </item>
    
    <item>
      <title>My First Blog Post!</title>
      <link>/2020/01/01/my-first-blog-post/</link>
      <pubDate>Wed, 01 Jan 2020 13:09:13 -0600</pubDate>
      
      <guid>/2020/01/01/my-first-blog-post/</guid>
      <description>2020 is the year I blog more. It&amp;rsquo;s also the year I start blogging. The goal is to post data analysis week. That&amp;rsquo;s 52 posts. Once a week. For a year.
The idea of it scares me. I have a lot of ideas I don&amp;rsquo;t act on because I worry they aren&amp;rsquo;t polished enough. There&amp;rsquo;s a lot of things I don&amp;rsquo;t do because I worry I won&amp;rsquo;t do them well. But the only way to get better is to try.</description>
    </item>
    
  </channel>
</rss>